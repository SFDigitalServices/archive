
<IfModule !rewrite_module>
  LoadModule rewrite_module modules/mod_rewrite.so
</IfModule>

<IfModule !macro_module>
  LoadModule macro_module modules/mod_macro.so
</IfModule>

ServerName archive.sf.gov
ServerAdmin ds-support@sfgov.org

DocumentRoot /app/public
<Directory /app/public>
  Require all granted
</Directory>

# VirtualHosts are confusing! Here's the deal: httpd will apply the rules from
# the first VirtualHost directive that matches:
#
# If the hostname and port match the pattern in `<VirtualHost pattern>`, _and_
# If the hostname (HTTP Host header) matches the ServerName or any ServerAlias
#
# For our use case, it's better to just do all of the host matching "logic" with
# ServerName and ServerAlias directives. Our only rule is that the default
# VirtualHost needs to come first, since:
#
# > If no matching ServerName or ServerAlias is found in the set of virtual
# > hosts containing the most specific matching IP address and port combination,
# > then the first listed virtual host that matches that will be used.
#
# See: <https://httpd.apache.org/docs/2.4/vhosts/name-based.html#defaultvhost>
#
# Note: "80" here is the port, per `Listen 80` in httpd's default config.
<VirtualHost *>
  ServerAlias *.herokuapp.com
</VirtualHost>

# This is the easiest way to stub out the VirtualHost block for an archive site:
#
# ```apache
# Use ArchiveSite site-domain.org site-rewrites collection-id
# ```
<Macro ArchiveSite ${domain} ${rewrites_file} ${collection_id}>
  <VirtualHost *>
    ServerName "${domain}"
    ServerAlias "*.${domain}"
    RewriteEngine On
    RewriteMap redirect "txt:/app/httpd/conf/sites/${rewrites_file}"
    RewriteRule "^(.*)$" "${redirect:$1|https://wayback.archive-it.org/${collection_id}/3/https://${domain}$1}"
  </VirtualHost>
</Macro>

# TIDA (Treasure Island Development Authority)
Use ArchiveSite sftreasureisland.org sftreasureisland.tsv 18901

UndefMacro ArchiveSite